

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  files File[]
  messages Message[]
}

model VerificationToken {
  identifier String @id  @default(auto()) @map("_id") @db.ObjectId
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model File{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  url String
  messages Message[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId],references: [id])
  userId String @db.ObjectId
}


model Message{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  file File @relation(fields: [fileId],references: [id])
  fileId String @db.ObjectId
  user User @relation(fields: [userId],references: [id])
  userId String @db.ObjectId 
}